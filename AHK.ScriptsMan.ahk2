/**********************************************************************************************************************************************************************
Name:													AHK.ScriptsMan beta 1
AutoHotkey version:										AHK v2
Language:												custom
Author:													maul.esel
***********************************************************************************************************************************************************************
*/
#SingleInstance force
#KeyHistory 0
ListLines Off
OnExit MainWinClose
global XMLParser, cFile, cLibrary, cProject ; classes
global Documents, Resources, Gui, Data_Manager, Keyword ; other
global null := false

if FilesAreMissing(){
	Menu, Tray, NoIcon
	Error("the auto-execute section", "-0x0000", "Files are missing.", "Required files include:`n- `"" A_ScriptDir "\AHK.ScriptsMan.dll`"`n"
		. "- `"" A_ScriptDir "\Settings.xml`"`n- `"" A_ScriptDir "\Keywords_AHK_B.hes`"`n"
		. "- `"" A_ScriptDir "\Keywords_AHK_L.hes`"`n- `"" A_ScriptDir "\Keywords_AHK_I.hes`"`n- `"" A_ScriptDir "Keywords_AHK_2.hes`"", "Exiting...")
	ExitApp
	}
Menu Tray, Icon, %A_ScriptDir%\AHK.ScriptsMan.dll, 1, 1
hSCIModule := SCI_Init(A_ScriptDir "\#Extern\Scintilla.dll")
; ***********************************************************************************************************************************************************************
Data_Manager := {}
Data_Manager.ScriptDir := XML_Get("/paths/script-dir")

If (SubStr(Data_Manager.ScriptDir, 0) != "\") {
	_Temp := Data_Manager.ScriptDir
	_Temp .= "\"
	Data_Manager.ScriptDir := _Temp
;	Data_Manager.ScriptDir .= "\"
	}

; ***********************************************************************************************************************************************************************
LoopFiles %A_ScriptDir%\Languages\*.xml
	{
	if (XML_Get("/Translation/@language", 1, A_LoopFileFullPath) && XML_Get("/Translation/@language", 1, A_LoopFileFullPath) = XML_Get("/language", 1)) {
		Data_Manager.LanguageXML	:=	A_LoopFileFullPath
		break
		}
	}
if (! Data_Manager.HasKey("LanguageXML")) {
	Error("the auto-execute section", "-0x0001", "The language file is missing.", "The language file must be a *.xml file located in`n`"" A_ScriptDir "\Languages`".`n"
			. "There was no file found that matches the current language setting (`"" XML_Get("/language") "`").", "Exiting...")
	ExitApp
	}
	
Keyword	:=	{}
	Keyword.file	:=  {}
		Keyword.file.Hide			:=	XML_Translation("/KeyWords/Hide")			?	XML_Translation("/KeyWords/Hide")			:	"hide"
		Keyword.file.Include		:=	XML_Translation("/KeyWords/Include")		?	XML_Translation("/KeyWords/Include")		:	"include"
		Keyword.file.FileType		:=	XML_Translation("/KeyWords/FileType")		?	XML_Translation("/KeyWords/FileType")		:	"type"
		Keyword.file.Description	:=	XML_Translation("/KeyWords/Description")	?	XML_Translation("/KeyWords/Description")	:	"description"
		Keyword.file.Path			:=	XML_Translation("/KeyWords/Path")			?	XML_Translation("/KeyWords/Path")			:	"path"
	Keyword.lib		:=	{}
		Keyword.lib.Hide			:=	XML_Translation("/KeyWords/Hide")			?	XML_Translation("/KeyWords/Hide")			:	"hide"
		Keyword.lib.Author			:=	XML_Translation("/KeyWords/Author")			?	XML_Translation("/KeyWords/Author")			:	"author"
		Keyword.lib.License			:=	XML_Translation("/KeyWords/License")		?	XML_Translation("/KeyWords/License")		:	"license"
		Keyword.lib.Version			:=	XML_Translation("/KeyWords/Version")		?	XML_Translation("/KeyWords/Version")		:	"version"
		Keyword.lib.Path			:=	XML_Translation("/KeyWords/Path")			?	XML_Translation("/KeyWords/Path")			:	"path"

Documents	:=	{}
Resources	:=	{}
; **********************************************************************************************************************************************************************
#include _Source\Gui.ahk

Data_List()

Gui 1: Show, Maximize, % "AHK.ScriptsMan - " (A_IsCompiled ? "(executable)" : "(script)")
OnMessage(0x4E, "WM_Notify")
return
; **********************************************************************************************************************************************************************
Resource_Package(ID){

if not _7zip := XML_Get("/paths/7zip")
	return -1
	
command := "cd /D `"" A_ScriptDir "\#Temp\Package`""
command := command " && `"%_7zip%`" a -ssw -t7z -r `"..\" SVS_F "`" `".\" Resource[ID].Name "`" && exit"
command := "`"" command "`""

run %A_ComSpec% /k %command%, %A_ScriptDir%\#Temp

return
}
; **********************************************************************************************************************************************************************
UI_Event_Handler(sHwnd, sEvent, sText, sPos, sID) {
tooltip %sID%
If (sEvent != "click")
	return

if (sID = 211) {
	if Project_Create()
		UI_Event_Handler(0, "click", "", 0, 312)
} else if (sID = 221) {
	Gui 2: Show, w1250 h800, AHK.ScriptsMan - resources
} else if (sID = 222) {
	Resources[sID].AddUserData()
	return -1
} else if (sID = 223) {
	Resources[sID].Save2Obj()
	return -1
} else if (sID = 224) {
	Resources[sID].SetPriority()
	return -1
} else if (sID = 231) {
	;SCI_SaveFile()
} else if (sID = 232) {
	;SaveAs
	FileSelectFile _SavePlace, S27, %ScriptDir%,, Scripts (*.ahk; *.ahkl; *.ahki; *.ia)
	If ErrorLevel
		return -2
	FileDelete %_SavePlace%
	;HE_SaveFile(HwndHEdit3, _SavePlace, -1)
} else if (sID = 233) {
	;_Files := HE_GetFileCount(HwndHEdit2)
	;Loop %_Files% {
	;	If (_Name := HE_GetFileName(HwndHEdit2, A_Index))
	;		HE_SaveFile(HwndHEdit2, _Name, A_Index)
	;	}
} else if (sID = 234) {
	;if (_Name := HE_GetFileName(HwndHEdit2, -1))
	;		HE_SaveFile(HwndHEdit2, _Name, -1)
	;HE_CloseFile(HwndHEdit2, -1)
} else if (sID = 235) {
	FileSelectFile _File, 11, %_ScriptsDir%,, Scripts (*.ahk; *.ahkl; *.ahki; *.ia)
	;if _File
	;	HE_OpenFile(HwndHEdit2, _File, true)
} else if (sID = 241) {
	;_Text := HE_GetSelText(HwndHEdit2)
	_Text := SCI_GetSelection(Data_Manager.SCI2.Handle)
	;Dlg_Find(HwndHEdit2, "Dlg_Find_Event", "-d", _Text)
} else if (sID = 242) {
	_Text := SCI_GetSelection(Data_Manager.SCI2.Handle)
	;Dlg_Replace(HwndHEdit2, "Dlg_Replace_Event", "-d-c-w", _Text)
	return -1
} else if (sID = 243) {
	Menu Context_Language, Show
} else if (sID = 246) {
	return SCI_Undo(Data_Manager.SCI2.Handle)
} else if (sID = 247) {
	return SCI_Redo(Data_Manager.SCI2.Handle)
} else if (sID = 251) {
	Library_Create()
	return -1
} else if (sID = 252) {
	File_Create()
	return -1
} else if (sID = 253) {
	; AddUdat(, "db")
	return -1
} else if (sID = 261) {
	Task_Add()
} else if (sID = 271) {
	
} else if (sID = 111) {
	Resources[sID].Open()
	UI_Event_Handler(0, "click", "", 0, 312)
} else if (sID = 112) {
	return -1
} else if (sID = 121) {
	Gui 1: Default
	Gui 1: Listview, Projects_LV
	_Row := LV_GetNext()
	LV_GetText(_File, _Row, 1)
	;OpenFile_Edit(_File)
} else if (sID = 126) {
	Gui 1: Default
	Gui 1: Listview, Files_LV
	_Row := LV_GetNext()
	LV_GetText(_File, _Row, 6)
	run rundll32.exe shell32.dll`,OpenAs_RunDLL %_File%
} else if (sID = 171) {
;	Gui 1: Default
;	Gui 1: Listview, Tasks_LV
	
;	_Row := LV_GetNext()
;	LV_GetText(_TaskName, _Row)
;	_Task1 := SVS_GetKeyName(A_ScriptDir "\#Data\AHK.ScriptsMan.ini", "tasks", _TaskName, false)
;	_Task2 := SVS_GetKeyName(A_ScriptDir "\#Data\AHK.ScriptsMan.ini", "tasks", _TaskName, true)
;	IniDelete	%A_ScriptDir%\#Data\AHK.ScriptsMan.ini,	tasks,	%_Task1%
;	IniDelete	%A_ScriptDir%\#Data\AHK.ScriptsMan.ini,	tasks,	%_Task2%.Priority
;	IniDelete	%A_ScriptDir%\#Data\AHK.ScriptsMan.ini,	tasks,	%_Task2%.Description
;	IniDelete	%A_ScriptDir%\#Data\AHK.ScriptsMan.ini,	tasks,	%_Task2%.Remember
	
;	LV_Delete(_Row)
	;if (Tasks_LV("Normal", 1) = -1)
	;	HE_CloseFile(HwndHEdit3, -2)
	}
return true
}

; **********************************************************************************************************************************************************************
Dlg_Find_Event(sEvent, sFlags, sFindText, sUnused) {
static pos := 0
MsgBox
global HwndHEdit2
SoundBeep
if (Event = "C")
	return
;pos := HE_FindText(HwndHEdit2, FindText, pos, -1, (InStr(Flags, "w") ? "WHOLEWORD " : "") . (InStr(Flags, "c") ? "MATCHCASE"))
if (pos = -1)
	return
SCI_SetSelection(Data_Manager.SCI2.Handle, pos, pos + StrLen(FindText))
;HE_SetSel(HwndHEdit2, pos, pos + StrLen(FindText))
return
}
; **********************************************************************************************************************************************************************
Dlg_Replace_Event(sEvent, sFlags, sFindText, sReplaceText) {
static pos := 0
global HwndHEdit2
SoundBeep
if (Event = "C")
	return
if (Event = "F") {
	;pos := HE_FindText(HwndHEdit2, FindText, pos, -1, (InStr(Flags, "w") ? "WHOLEWORD " : "") . (InStr(Flags, "c") ? "MATCHCASE"))
	if (pos = -1)
		return
	SCI_SetSelection(Data_Manager.SCI2.Handle, pos, pos + StrLen(FindText))
;	HE_SetSel(HwndHEdit2, pos, pos + StrLen(FindText))
} else if (Event = "R") {
	;pos := HE_FindText(HwndHEdit2, FindText, pos -1, -1, (InStr(Flags, "w") ? "WHOLEWORD " : "") . (InStr(Flags, "c") ? "MATCHCASE"))
	if (pos = -1)
		return
	SCI_SetSelection(Data_Manager.SCI2.Handle, pos, pos + StrLen(FindText))
	;HE_SetSel(HwndHEdit2, pos, pos + StrLen(FindText))
	SCI_ReplaceSelection(Data_Manager.SCI2.Handle, ReplaceText)
	;HE_ReplaceSel(HwndHEdit2, ReplaceText)
} else if (Event = "A") {
	Loop {
		;pos := HE_FindText(HwndHEdit2, FindText, pos -1, -1, (InStr(Flags, "w") ? "WHOLEWORD " : "") . (InStr(Flags, "c") ? "MATCHCASE"))
		if (pos = -1)
			break
		SCI_SetSelection(Data_Manager.SCI2.Handle, pos, pos + StrLen(FindText))
		;HE_SetSel(HwndHEdit2, pos, pos + StrLen(FindText))
		SCI_ReplaceSelection(Data_Manager.SCI2.Handle, ReplaceText)
		;HE_ReplaceSel(HwndHEdit2, ReplaceText)		
		}
	}
return
}
; **********************************************************************************************************************************************************************
; **********************************************************************************************************************************************************************
Restart:
If (!B_ExitCode) {
	B_ExitCode := 2
	Gosub MainWinClose
	}
return
; **********************************************************************************************************************************************************************
ClickList:
;if (A_GuiEvent = "RightClick" && A_GuiControl != "ResourceData_LV" && A_GuiControl != "Resource_Projects_LV")
;	Menu, Context_%A_GuiControl%, Show
if IsFunc(A_GuiControl)
	%A_GuiControl%(A_GuiEvent, A_EventInfo)
return
; **********************************************************************************************************************************************************************
SelectLanguage:
return
; **********************************************************************************************************************************************************************
OpenHelp:
If FileExist(A_ScriptDir . "\AHK.ScriptsMan.chm")
	run AHK.ScriptsMan.chm
return
; **********************************************************************************************************************************************************************
Browse7zip:
FileSelectFile Path7zip, 3, %A_ProgramFiles%, % XML_Translation("/UserInterface/Dialogs/Browse7zip"), (*.exe)
if not Path7zip
	return
SplitPath Path7zip, , , Ext
if (Ext != "EXE")
	return
GuiControl 1: , Path7zip, %Path7zip%
SVS_SetSetting("/path/7zip", Path7zip)
return
; **********************************************************************************************************************************************************************
BrowseAHK_B_EXE:
SVS_BrowseAHK_Exe("B")
return
; **********************************************************************************************************************************************************************
BrowseAHK_L_EXE:
SVS_BrowseAHK_Exe("L")
return
; **********************************************************************************************************************************************************************
BrowseAHK_I_EXE:
SVS_BrowseAHK_Exe("I")
return
; **********************************************************************************************************************************************************************
BrowseScriptDir:
FileSelectFolder ScriptDir, *%A_ProgramFiles%, 3, % XML_Translation("/UserInterface/Dialogs/BrowseScriptDir")
if not ScriptDir
	return
GuiControl 1:, PathScripts, %ScriptDir%
SVS_SetSetting("paths/ScriptDir", ScriptDir)
return
; **********************************************************************************************************************************************************************
RememberTasks:
return
; **********************************************************************************************************************************************************************

#Include %A_ScriptDir%\#Extern
	#Include Panel.ahk
	#Include Toolbar.ahk
	#Include TVM.ahk
	#Include FileIsBinary.ahk
	
#Include <scintilla>

#Include %A_ScriptDir%\_Source
	#Include Data.ahk
	#Include Project.ahk
	#Include File.ahk
	#Include Library.ahk
	#Include Task.ahk
	#Include divers.ahk
	#Include Debug.ahk
	#Include Tab.ahk
	#include Gui_Event.ahk
	#include xmlparser.ahk
